<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-4.1.xsd">

    <import resource="datasource/itemsFactory.xml" />
    <import resource="datasource/collectionsFactory.xml" />

    <bean id="siteView" class="ulcambridge.foundations.viewer.SiteViewController">
        <property name="collectionFactory" ref="collectionFactory" />
        <property name="itemFactory" ref="itemFactory" />
    </bean>

    <bean id="bookmarkDao" class="ulcambridge.foundations.viewer.dao.BookmarkDBDao">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="myLibraryController" class="ulcambridge.foundations.viewer.MyLibraryController">
        <property name="itemFactory" ref="itemFactory" />
        <property name="bookmarkDao" ref="bookmarkDao" />
    </bean>

    <bean id="docView"
          class="ulcambridge.foundations.viewer.DocumentViewController">
        <property name="rootURL" value="${rootURL}"/>
        <property name="collectionFactory" ref="collectionFactory" />
        <property name="itemFactory" ref="itemFactory" />
        <property name="dataSource" ref="collectionsDao" />
    </bean>

    <bean id="collectionView"
          class="ulcambridge.foundations.viewer.CollectionViewController">
        <property name="collectionFactory" ref="collectionFactory"/>
        <property name="itemFactory" ref="itemFactory"/>
    </bean>

    <!-- default to XTF Search -->
    <bean id="search"
          class="ulcambridge.foundations.viewer.search.XTFSearch">
    </bean>

    <bean id="searchController"
          class="ulcambridge.foundations.viewer.search.SearchController">
        <constructor-arg type="ulcambridge.foundations.viewer.search.Search">
            <ref bean="search"/>
        </constructor-arg>
        <property name="itemFactory" ref="itemFactory" />
        <property name="collectionFactory" ref="collectionFactory" />
    </bean>

    <bean id="oauthLoginController"
          class="ulcambridge.foundations.viewer.authentication.LoginController">
        <property name="usersDao" ref="usersDao" />
        <property name="bookmarkDao" ref="bookmarkDao" />
        <constructor-arg index="0" ref="googleLoginRestTemplate" />
        <constructor-arg index="1" ref="facebookLoginRestTemplate" />
        <constructor-arg index="2" ref="linkedinLoginRestTemplate" />
    </bean>

    <bean id="form" class="ulcambridge.foundations.viewer.FormController"/>

    <util:properties id="globalproperties" location="classpath:cudl-global.properties"/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:cudl-global.properties</value>
            </list>
        </property>
    </bean>

    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">

        <property name="contentType" value="text/html;charset=UTF-8"></property>
        <property name="prefix">
            <value>/WEB-INF/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
        <property name="exposedContextBeanNames">
            <list>
                <value>globalproperties</value>
            </list>
        </property>
    </bean>

    <mvc:annotation-driven/>

    <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />

    <!-- resources exclusions from servlet mapping -->
    <mvc:resources mapping="/models/**" location="/models/" />
    <mvc:resources mapping="${cudl-viewer-content.images.url}/**" location="file:${cudl-viewer-content.images.path}/"/>
    <mvc:resources mapping="${cudl-viewer-content.html.url}/**" location="file:${cudl-viewer-content.html.path}/"/>
    <mvc:resources mapping="/img/**" location="/img/" />
    <mvc:resources mapping="/favicon.ico" location="/favicon.ico" />

    <!-- 31536000 = 60*60*24*365 = 1 year -->
    <mvc:resources mapping="/ui/**" location="classpath:ulcambridge/foundations/viewer/viewer-ui/assets/"
                    cache-period="31536000">
        <mvc:resource-chain resource-cache="true">
            <mvc:resolvers>
                <bean class="org.springframework.web.servlet.resource.GzipResourceResolver"/>
            </mvc:resolvers>
        </mvc:resource-chain>
    </mvc:resources>

    <!-- Create an embedded viewer configuration based on values from our
         .properties file. -->
    <bean name="embeddedViewerConfig"
          class="ulcambridge.foundations.viewer.embedded.Configs"
          factory-method="createEmbeddedViewerConfig">
        <constructor-arg name="gaTrackingId" value="${cudl.viewer.analytics.embedded.gaid:}"/>
        <constructor-arg name="metadataUrlPrefix" value="${services://services.cudl.lib.cam.ac.uk}/v1/metadata/json/"/>
        <constructor-arg name="metadataUrlSuffix" value="${metadataUrlSuffix:}"/>
        <constructor-arg name="dziUrlPrefix" value="${imageServer://image01.cudl.lib.cam.ac.uk/}"/>
        <constructor-arg name="metadataUrlHost" value="${rootURL://cudl.lib.cam.ac.uk}"/>
    </bean>

    <!-- Cache headers are not set here but in urlrewrite.xml. This is because
         the viewer.html needs different cache-control values to the rest of the
         assets. -->
    <mvc:resources mapping="/embed/**" location="classpath:ulcambridge/foundations/embeddedviewer/assets/">
        <mvc:resource-chain resource-cache="true">
            <mvc:resolvers>
                <bean class="org.springframework.web.servlet.resource.GzipResourceResolver"/>
            </mvc:resolvers>
            <mvc:transformers>
                <bean name="embeddedviewerconfigurator"
                      class="ulcambridge.foundations.embeddedviewer.configuration.EmbeddedViewerConfiguringResourceTransformer">
                    <constructor-arg ref="embeddedViewerConfig"/>
                </bean>
            </mvc:transformers>
        </mvc:resource-chain>
    </mvc:resources>

    <mvc:resources mapping="/**" location="/" />
</beans>
