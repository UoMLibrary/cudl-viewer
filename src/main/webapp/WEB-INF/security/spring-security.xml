<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <import resource="../datasource/itemsFactory.xml" />

	<!-- This is where we configure Spring-Security -->
	<security:http auto-config="false" use-expressions="true"
		access-denied-page="/auth/denied/">

		<security:intercept-url pattern="/auth/login/"
			access="permitAll" />
		<security:intercept-url pattern="/auth/denied/"
			access="permitAll" />		
			
        <!--  restrict entire site -->						
		<!-- <security:intercept-url pattern="/"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/view/**"
			access="hasRole('ROLE_ADMIN')" />	
		<security:intercept-url pattern="/collections/**"
			access="hasRole('ROLE_ADMIN')" />		
		<security:intercept-url pattern="/mylibrary/**"
			access="hasRole('ROLE_ADMIN')" />	
		<security:intercept-url pattern="/help/**"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/about/**"
			access="hasRole('ROLE_ADMIN')" />	
		<security:intercept-url pattern="/news/**"
			access="hasRole('ROLE_ADMIN')" />			
		<security:intercept-url pattern="/contributors/**"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/terms/**"
			access="hasRole('ROLE_ADMIN')" />			
		<security:intercept-url pattern="/search**"
			access="hasRole('ROLE_ADMIN')" /> -->	 
			
		<security:intercept-url pattern="/mylibrary/**"
			access="hasRole('ROLE_USER')" /> 	
						
		<!-- Adding the openid-login tag activates Spring Security's support for 
			OpenID -->
		<security:openid-login login-page="/auth/login/"
			authentication-failure-url="/auth/login/?error=true" default-target-url="/mylibrary/"
			user-service-ref="MyUserDetailsService">
		</security:openid-login>

		<security:logout invalidate-session="true"
			logout-success-url="/auth/login/" logout-url="/auth/logout/" />

	</security:http>

	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="dataSource" />
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- <bean id="MyUserDetailsService"
		class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<property name="dataSource" ref="dataSource" />
	</bean> -->
	
	<bean id="usersDao"
		class="ulcambridge.foundations.viewer.authentication.UsersDBDao">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="MyUserDetailsService"
		class="ulcambridge.foundations.viewer.authentication.UserDetailsServiceImpl">
		<property name="usersDao" ref="usersDao" />
	</bean>

</beans>
