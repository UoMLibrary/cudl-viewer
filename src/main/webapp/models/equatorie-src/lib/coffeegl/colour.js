// Generated by CoffeeScript 1.6.1

/* ABOUT
                       __  .__              ________ 
   ______ ____   _____/  |_|__| ____   ____/   __   \
  /  ___// __ \_/ ___\   __\  |/  _ \ /    \____    /
  \___ \\  ___/\  \___|  | |  (  <_> )   |  \ /    / 
 /____  >\___  >\___  >__| |__|\____/|___|  //____/  .co.uk
      \/     \/     \/                    \/         
                                              CoffeeGL
                                              Benjamin Blundell - ben@section9.co.uk
                                              http://www.section9.co.uk

This software is released under the MIT Licence. See LICENCE.txt for details


TODO - byte vs float - convert when sent to the shader and allow specification any way
*/


/* RGBA
*/


(function() {
  var RGB, RGBA;

  RGBA = (function() {

    function RGBA(r, g, b, a) {
      this.r = r;
      this.g = g;
      this.b = b;
      this.a = a;
    }

    RGBA.prototype.flatten = function() {
      return [this.r, this.g, this.b, this.a];
    };

    RGBA.WHITE = function() {
      return new RGBA(1.0, 1.0, 1.0, 1.0);
    };

    return RGBA;

  })();

  /* RGB
  */


  RGB = (function() {

    function RGB(r, g, b) {
      this.r = r;
      this.g = g;
      this.b = b;
    }

    RGB.prototype.flatten = function() {
      return [this.r, this.g, this.b];
    };

    RGB.WHITE = function() {
      return new RGB(1.0, 1.0, 1.0);
    };

    return RGB;

  })();

  module.exports = {
    RGBA: RGBA,
    RGB: RGB
  };

}).call(this);
