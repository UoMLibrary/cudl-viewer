// Generated by CoffeeScript 1.6.1

/* ABOUT   
                       __  .__              ________ 
   ______ ____   _____/  |_|__| ____   ____/   __   \
  /  ___// __ \_/ ___\   __\  |/  _ \ /    \____    /
  \___ \\  ___/\  \___|  | |  (  <_> )   |  \ /    / 
 /____  >\___  >\___  >__| |__|\____/|___|  //____/  .co.uk
      \/     \/     \/                    \/         
                                              CoffeeGL
                                              Benjamin Blundell - ben@section9.co.uk
                                              http://www.section9.co.uk

This software is released under the MIT Licence. See LICENCE.txt for details


- Resources

* http://coffeescriptcookbook.com/chapters/ajax/ajax_request_without_jquery

- TODO
  * Need to get some kind of percentage in here, along with a signal we can check!
  * Need to check if its binary, json or other here, properly!
*/


(function() {
  var Request, Signal;

  Signal = require('./signal').Signal;

  /*Request
  */


  Request = (function() {

    function Request(url) {
      this.url = url;
      this._context = CoffeeGL.Context;
    }

    Request.prototype.get = function(callback) {
      var _this = this;
      this.req = new XMLHttpRequest();
      this.req.onreadystatechange = function() {
        var data, l;
        if (_this.req.readyState === 4) {
          if (_this.req.status === 200 || _this.req.status === 304) {
            CoffeeGL.Context.switchContext(_this._context);
            l = _this.url.length - 1;
            if (_this.url.indexOf("xml", l - 3) >= 0 || _this.url.indexOf("js", l - 2) >= 0 || _this.url.indexOf("json", l - 2) >= 0) {
              data = eval('(' + _this.req.responseText + ')');
              data._coffeegl_request_url = _this.url;
              callback(data);
            } else {
              callback(_this.req.responseText);
            }
          }
        }
        return _this;
      };
      this.req.open('GET', this.url);
      this.req.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
      this.req.send(null);
      return this;
    };

    return Request;

  })();

  module.exports = {
    Request: Request
  };

}).call(this);
