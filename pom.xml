<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ulcambridge.foundations.viewer</groupId>
    <artifactId>FoundationsViewer</artifactId>
    <version>dev-2020021001</version>
    <packaging>war</packaging>

    <name>CUDL Viewer</name>
    <url>https://bitbucket.org/CUDL/cudl-viewer</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.javadoc.skip>true</maven.javadoc.skip>

        <embedded-viewer-assets.version>0.1.0</embedded-viewer-assets.version>
        <embedded-viewer-configurer.version>0.0.0</embedded-viewer-configurer.version>
        <cudl-viewer-ui.version>1.5.0</cudl-viewer-ui.version>
        <spring-security-raven.version>1.0.0</spring-security-raven.version>

        <commons-email.version>1.5</commons-email.version>
        <commons-fileupload.version>1.3.3</commons-fileupload.version>
        <commons-io.version>2.6</commons-io.version>
        <commons-lang3.version>3.7</commons-lang3.version>
        <commons-logging.version>1.1</commons-logging.version>
        <guava.version>18.0</guava.version>
        <hibernate-validator.version>4.3.2.Final</hibernate-validator.version> <!-- TODO: v5 -->
        <jena.version>2.13.0</jena.version> <!-- TODO: v3 -->
        <jgit.version>4.11.2.201809100523-r</jgit.version> <!-- TODO: v5 -->
        <jsonatg.version>1.0.5</jsonatg.version>
        <jsoup.version>1.11.3</jsoup.version>
        <jtidy.version>r938</jtidy.version>
        <log4j.version>1.2.17</log4j.version> <!-- TODO: v2 or logback -->
        <owasp-encoder.version>1.2.2</owasp-encoder.version>
        <spring-boot.version>1.5.16.RELEASE</spring-boot.version> <!-- TODO: v2 -->
        <tomcat.version>7.0.76</tomcat.version> <!-- TODO: v9 -->
        <urlrewritefilter.version>4.0.4</urlrewritefilter.version>
    </properties>

    <scm>
        <connection>scm:git:ssh://git@bitbucket.org/CUDL/cudl-viewer.git</connection>
        <developerConnection>scm:git:ssh://git@bitbucket.org/CUDL/cudl-viewer.git</developerConnection>
        <url>https://bitbucket.org/CUDL/cudl-viewer</url>
      <tag>dev-2020021001</tag>
  </scm>

    <build>
        <plugins>
            <!--  this plugin is run by 'mvn tomcat7:run' and allow live reloads for static assets e.g. jsp changes. -->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <path>/</path>
                    <uriEncoding>UTF-8</uriEncoding>
                    <additionalConfigFilesDir>${basedir}/src/main/resources/</additionalConfigFilesDir>
                    <additionalConfigFilesDir>${basedir}/src/test/resources/</additionalConfigFilesDir>
                    <server>tomcat-development-server</server>
                    <port>1111</port>
                    <contextFile>${basedir}/src/main/resources/context.xml</contextFile>
                </configuration>
            </plugin>

            <!--  This plugin is run by 'mvn clean verify cargo:run' and does not allow live reloads -->
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <version>1.6.2</version>
                <configuration>
                    <configuration>
                        <type>standalone</type>
                        <configfiles>
                            <configfile>
                                <file>${project.basedir}/src/main/resources/cudl-global.properties</file>
                                <todir>shared/classes</todir>
                            </configfile>
                        </configfiles>
                        <properties>
                            <cargo.servlet.port>1111</cargo.servlet.port>
                        </properties>
                    </configuration>
                    <container>
                        <containerId>tomcat7x</containerId>
                        <artifactInstaller>
                            <groupId>org.apache.tomcat</groupId>
                            <artifactId>tomcat</artifactId>
                            <version>${tomcat.version}</version>
                        </artifactInstaller>
                    </container>
                    <deployables>
                        <deployable>
                            <properties>
                                <context>ROOT</context>
                            </properties>
                        </deployable>
                    </deployables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!-- We don't want to include the global properties file as this changes
                 depending on the environment - dev, beta live etc. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <warName>FoundationsViewer</warName>
                    <packagingExcludes>
                        WEB-INF/classes/cudl-global.properties,
                        models/equatorie-src/**/*
                    </packagingExcludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>keystore</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
                <configuration>
                    <!-- Don't automatically push changes to the remote repo
                         while executing release:prepare. -->
                    <pushChanges>false</pushChanges>
                    <!-- Use the local repo with release:perform instead of the
                         upstream repository specified in <scm>. -->
                    <localCheckout>true</localCheckout>
                </configuration>
            </plugin>

            <!-- Explicitly fail the build if Maven 3 is not being used.
                 The S3 Wagon doesn't work on Maven 2. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.4.1</version>
                <executions>
                    <execution>
                        <id>enforce-maven-3</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.0.0</version>
                                </requireMavenVersion>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources/</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <extensions>
            <extension>
                <groupId>org.springframework.build</groupId>
                <artifactId>aws-maven</artifactId>
                <version>5.0.0.RELEASE</version>
            </extension>
        </extensions>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <!-- Spring override -->
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Include the viewer UI's built assets. The resources jar contains
             the built files under META-INF/resources which gets served as if
             they were in the war's root. -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>viewer-ui</artifactId>
            <version>${cudl-viewer-ui.version}</version>
            <classifier>resources</classifier>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>

        <!-- Include the viewer UI's build metadata JSON files -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>viewer-ui</artifactId>
            <version>${cudl-viewer-ui.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- Include the embedded viewer's assets (html, css, js etc). -->
        <!-- TODO: I've not tested it, but it should be possible to include the
             previous version of the embedded viewer after this in order to have
             assets resolve for both versions. This would be required when
             updating the viewer so that people using cached viewer HTML could
             still resolve assets. As long as the new version is earlier on the
             classpath the correct viewer html should be used. -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>embedded-viewer-assets</artifactId>
            <version>${embedded-viewer-assets.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- Provides a ResourceTransformer which dynamically configures the
             embedded viewer HTML. -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>embedded-viewer-configurer</artifactId>
            <version>${embedded-viewer-configurer.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.tuckey</groupId>
            <artifactId>urlrewritefilter</artifactId>
            <version>${urlrewritefilter.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jsp-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging-api</artifactId>
            <version>${commons-logging.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${commons-fileupload.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-email</artifactId>
            <version>${commons-email.version}</version>
        </dependency>

        <!-- DB Pool -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
        </dependency>

        <!-- for XML parsing -->
        <dependency>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
        </dependency>

        <!-- for JSON parsing in Java -->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
        </dependency>

        <!-- jtidy -->
        <dependency>
            <groupId>net.sf.jtidy</groupId>
            <artifactId>jtidy</artifactId>
            <version>${jtidy.version}</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>

        <!-- taglibs -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>

        <!-- PostgreSQL driver -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>

        <!-- encoder to prevent XSS -->
        <dependency>
            <groupId>org.owasp.encoder</groupId>
            <artifactId>encoder</artifactId>
            <version>${owasp-encoder.version}</version>
        </dependency>

        <!-- Spring Framework -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security.oauth</groupId>
            <artifactId>spring-security-oauth2</artifactId>
        </dependency>

        <!-- Test utilities -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>

        <!-- JSON reading/writing for oauth -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <!-- for decrypting web tokens (oauth) -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-jwt</artifactId>
        </dependency>

        <!-- raven auth, in cudl repo -->
        <dependency>
            <groupId>uk.ac.cam.lib</groupId>
            <artifactId>spring-security-raven</artifactId>
            <version>${spring-security-raven.version}</version>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jgit</groupId>
            <artifactId>org.eclipse.jgit</artifactId>
            <version>${jgit.version}</version>
        </dependency>

        <!-- for Genizah tagging, also upgrade org.slf4j version
        or it will conflict with Jena -->

        <!-- Google GSON -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>

        <!-- Google Guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <!-- Apache Jena -->
        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>jena-core</artifactId>
            <version>${jena.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>jena-arq</artifactId>
            <version>${jena.version}</version>
        </dependency>

        <!-- for Genizah tagging end -->

        <dependency>
            <groupId>com.github.livesense</groupId>
            <artifactId>org.liveSense.scripting.jsp.taglib.jsonatg</artifactId>
            <version>${jsonatg.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${jsoup.version}</version>
        </dependency>

    </dependencies>

    <!-- Resolve private CUDL artifacts -->
    <repositories>
        <repository>
            <id>cudl-aws-release</id>
            <name>AWS Release Repository</name>
            <url>s3://mvn.cudl.lib.cam.ac.uk/release</url>
        </repository>
        <repository>
            <id>cudl-aws-snapshot</id>
            <name>AWS Snapshot Repository</name>
            <url>s3://mvn.cudl.lib.cam.ac.uk/snapshot</url>
        </repository>
    </repositories>

    <!-- Use CUDL's private repo to deploy artifacts -->
    <distributionManagement>
        <repository>
            <id>cudl-aws-release</id>
            <name>AWS Release Repository</name>
            <url>s3://mvn.cudl.lib.cam.ac.uk/release</url>
        </repository>
        <snapshotRepository>
            <id>cudl-aws-snapshot</id>
            <name>AWS Snapshot Repository</name>
            <url>s3://mvn.cudl.lib.cam.ac.uk/snapshot</url>
        </snapshotRepository>
    </distributionManagement>
</project>
